@using Library.Models.DTO.InfoResponses
@using Library.Models.Entities
@using Library.Services
@model List<Product>

@{
    ViewData["Title"] = "Інформаційні запити";
    string responseType = ViewBag.period == "month" ? "місяць" : "тиждень";
}

@if (Model.Count == 0)
{
    <h3>Немає результатів</h3>
}
else
{
    <h3>Перелік продукції, яка поповнила ваш каталог продукції за останній @responseType</h3>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>#</th>
                <th>Назва</th>
                <th>Тип продукту</th>
                <th>Жанр</th>
                <th>Формат</th>
                <th>Рік</th>
                <th>Дата додавання в каталог</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
                <tr >
                    <td>@product.ProductId</td>
                    <td>@product.Title</td>
                    
                    @if (product.ProductType == ProductType.Book && product.Book != null)
                    {
                        <td>Книга</td>
                        <td>@product.Book.Genre.Select(g => g.Name).Aggregate((a, b) => a + ", " + b)</td>
                        <td>-</td>
                        <td>@product.Book.PublicationYear</td>
                    }
                    else if (product.ProductType == ProductType.Disc && product.Disc != null)
                    {
                        @switch (product.Disc.DiscType)
                        {
                            case DiscType.Movie:
                                <td>Фільм</td>
                                <td>@product.Disc.Movie.Genre.Select(g => g.Name).Aggregate((a, b) => a + ", " + b)</td>
                            break;
                            case DiscType.Music:
                                <td>Музика</td>
                                <td>@product.Disc.Music.Genre.Select(g => g.Name).Aggregate((a, b) => a + ", " + b)</td>
                            break;
                            case DiscType.Game:
                                <td>Гра</td>
                                <td>@product.Disc.Game.Genre.Select(g => g.Name).Aggregate((a, b) => a + ", " + b)</td>
                            break;
                        }
                        <td>@product.Disc.Format</td>
                        <td>@product.Disc.Year</td>
                    }
                    <td>@product.AddInCatalogDate.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>
}